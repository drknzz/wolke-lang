-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.8 from ParWolke.y
-----------------------------------------------------------------------------

state 26 contains 1 shift/reduce conflicts.
state 32 contains 1 shift/reduce conflicts.
state 77 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram -> Program                         (0)
	Ident -> L_ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListDef                                 (4)
	Def -> 'def' Ident '(' ListArg ')' '->' Type Block   (5)
	Def -> Type Ident '=' Expr                         (6)
	ListDef -> Def                                     (7)
	ListDef -> Def ListDef                             (8)
	Arg -> Type Ident                                  (9)
	Arg -> Type '&' Ident                              (10)
	ListArg ->                                         (11)
	ListArg -> Arg                                     (12)
	ListArg -> Arg ',' ListArg                         (13)
	Block -> '{' ListStmt '}'                          (14)
	ListStmt ->                                        (15)
	ListStmt -> ListStmt Stmt                          (16)
	Stmt -> 'pass' ';'                                 (17)
	Stmt -> Block                                      (18)
	Stmt -> Def ';'                                    (19)
	Stmt -> Ident '=' Expr ';'                         (20)
	Stmt -> 'return' Expr ';'                          (21)
	Stmt -> 'return' ';'                               (22)
	Stmt -> 'if' Expr Stmt                             (23)
	Stmt -> 'ife' Expr Stmt 'else' Stmt                (24)
	Stmt -> 'while' Expr Stmt                          (25)
	Stmt -> Expr ';'                                   (26)
	Stmt -> 'break' ';'                                (27)
	Stmt -> 'continue' ';'                             (28)
	Stmt -> 'print' '(' Expr ')' ';'                   (29)
	Type -> 'Int'                                      (30)
	Type -> 'String'                                   (31)
	Type -> 'Bool'                                     (32)
	Type -> 'Void'                                     (33)
	Type -> 'Function' '(' ListType ')' Type           (34)
	ListType ->                                        (35)
	ListType -> Type                                   (36)
	ListType -> Type ',' ListType                      (37)
	Expr6 -> Ident                                     (38)
	Expr6 -> Integer                                   (39)
	Expr6 -> 'True'                                    (40)
	Expr6 -> 'False'                                   (41)
	Expr6 -> Ident '(' ListExpr ')'                    (42)
	Expr6 -> String                                    (43)
	Expr6 -> '(' Expr ')'                              (44)
	Expr5 -> '-' Expr6                                 (45)
	Expr5 -> 'not' Expr6                               (46)
	Expr5 -> Expr6                                     (47)
	Expr4 -> Expr4 MulOp Expr5                         (48)
	Expr4 -> Expr5                                     (49)
	Expr3 -> Expr3 AddOp Expr4                         (50)
	Expr3 -> Expr4                                     (51)
	Expr2 -> Expr2 RelOp Expr3                         (52)
	Expr2 -> Expr3                                     (53)
	Expr1 -> Expr2 'and' Expr1                         (54)
	Expr1 -> Expr2                                     (55)
	Expr -> Expr1 'or' Expr                            (56)
	Expr -> Expr1                                      (57)
	ListExpr ->                                        (58)
	ListExpr -> Expr                                   (59)
	ListExpr -> Expr ',' ListExpr                      (60)
	AddOp -> '+'                                       (61)
	AddOp -> '-'                                       (62)
	MulOp -> '*'                                       (63)
	MulOp -> '/'                                       (64)
	MulOp -> '%'                                       (65)
	RelOp -> '<'                                       (66)
	RelOp -> '<='                                      (67)
	RelOp -> '>'                                       (68)
	RelOp -> '>='                                      (69)
	RelOp -> '=='                                      (70)
	RelOp -> '!='                                      (71)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!='           { PT _ (TS _ 1) }
	'%'            { PT _ (TS _ 2) }
	'&'            { PT _ (TS _ 3) }
	'('            { PT _ (TS _ 4) }
	')'            { PT _ (TS _ 5) }
	'*'            { PT _ (TS _ 6) }
	'+'            { PT _ (TS _ 7) }
	','            { PT _ (TS _ 8) }
	'-'            { PT _ (TS _ 9) }
	'->'           { PT _ (TS _ 10) }
	'/'            { PT _ (TS _ 11) }
	';'            { PT _ (TS _ 12) }
	'<'            { PT _ (TS _ 13) }
	'<='           { PT _ (TS _ 14) }
	'='            { PT _ (TS _ 15) }
	'=='           { PT _ (TS _ 16) }
	'>'            { PT _ (TS _ 17) }
	'>='           { PT _ (TS _ 18) }
	'Bool'         { PT _ (TS _ 19) }
	'False'        { PT _ (TS _ 20) }
	'Function'     { PT _ (TS _ 21) }
	'Int'          { PT _ (TS _ 22) }
	'String'       { PT _ (TS _ 23) }
	'True'         { PT _ (TS _ 24) }
	'Void'         { PT _ (TS _ 25) }
	'and'          { PT _ (TS _ 26) }
	'break'        { PT _ (TS _ 27) }
	'continue'     { PT _ (TS _ 28) }
	'def'          { PT _ (TS _ 29) }
	'else'         { PT _ (TS _ 30) }
	'if'           { PT _ (TS _ 31) }
	'ife'          { PT _ (TS _ 32) }
	'not'          { PT _ (TS _ 33) }
	'or'           { PT _ (TS _ 34) }
	'pass'         { PT _ (TS _ 35) }
	'print'        { PT _ (TS _ 36) }
	'return'       { PT _ (TS _ 37) }
	'while'        { PT _ (TS _ 38) }
	'{'            { PT _ (TS _ 39) }
	'}'            { PT _ (TS _ 40) }
	L_ident        { PT _ (TV $$) }
	L_integ        { PT _ (TI $$) }
	L_quoted       { PT _ (TL $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	Def             rules 5, 6
	ListDef         rules 7, 8
	Arg             rules 9, 10
	ListArg         rules 11, 12, 13
	Block           rule  14
	ListStmt        rules 15, 16
	Stmt            rules 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29
	Type            rules 30, 31, 32, 33, 34
	ListType        rules 35, 36, 37
	Expr6           rules 38, 39, 40, 41, 42, 43, 44
	Expr5           rules 45, 46, 47
	Expr4           rules 48, 49
	Expr3           rules 50, 51
	Expr2           rules 52, 53
	Expr1           rules 54, 55
	Expr            rules 56, 57
	ListExpr        rules 58, 59, 60
	AddOp           rules 61, 62
	MulOp           rules 63, 64, 65
	RelOp           rules 66, 67, 68, 69, 70, 71

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'Bool'         shift, and enter state 7
	'Function'     shift, and enter state 8
	'Int'          shift, and enter state 9
	'String'       shift, and enter state 10
	'Void'         shift, and enter state 11
	'def'          shift, and enter state 12

	Program        goto state 3
	Def            goto state 4
	ListDef        goto state 5
	Type           goto state 6

State 1


	L_ident        shift, and enter state 2


State 2

	Ident -> L_ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'/'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'Bool'         reduce using rule 1
	'False'        reduce using rule 1
	'Function'     reduce using rule 1
	'Int'          reduce using rule 1
	'String'       reduce using rule 1
	'True'         reduce using rule 1
	'Void'         reduce using rule 1
	'and'          reduce using rule 1
	'break'        reduce using rule 1
	'continue'     reduce using rule 1
	'def'          reduce using rule 1
	'if'           reduce using rule 1
	'ife'          reduce using rule 1
	'not'          reduce using rule 1
	'or'           reduce using rule 1
	'pass'         reduce using rule 1
	'print'        reduce using rule 1
	'return'       reduce using rule 1
	'while'        reduce using rule 1
	'{'            reduce using rule 1
	L_ident        reduce using rule 1
	L_integ        reduce using rule 1
	L_quoted       reduce using rule 1
	%eof           reduce using rule 1


State 3

	%start_pProgram -> Program .                        (rule 0)

	%eof           accept


State 4

	ListDef -> Def .                                    (rule 7)
	ListDef -> Def . ListDef                            (rule 8)

	'Bool'         shift, and enter state 7
	'Function'     shift, and enter state 8
	'Int'          shift, and enter state 9
	'String'       shift, and enter state 10
	'Void'         shift, and enter state 11
	'def'          shift, and enter state 12
	%eof           reduce using rule 7

	Def            goto state 4
	ListDef        goto state 16
	Type           goto state 6

State 5

	Program -> ListDef .                                (rule 4)

	%eof           reduce using rule 4


State 6

	Def -> Type . Ident '=' Expr                        (rule 6)

	L_ident        shift, and enter state 2

	Ident          goto state 15

State 7

	Type -> 'Bool' .                                    (rule 32)

	'&'            reduce using rule 32
	')'            reduce using rule 32
	','            reduce using rule 32
	'{'            reduce using rule 32
	L_ident        reduce using rule 32


State 8

	Type -> 'Function' . '(' ListType ')' Type          (rule 34)

	'('            shift, and enter state 14


State 9

	Type -> 'Int' .                                     (rule 30)

	'&'            reduce using rule 30
	')'            reduce using rule 30
	','            reduce using rule 30
	'{'            reduce using rule 30
	L_ident        reduce using rule 30


State 10

	Type -> 'String' .                                  (rule 31)

	'&'            reduce using rule 31
	')'            reduce using rule 31
	','            reduce using rule 31
	'{'            reduce using rule 31
	L_ident        reduce using rule 31


State 11

	Type -> 'Void' .                                    (rule 33)

	'&'            reduce using rule 33
	')'            reduce using rule 33
	','            reduce using rule 33
	'{'            reduce using rule 33
	L_ident        reduce using rule 33


State 12

	Def -> 'def' . Ident '(' ListArg ')' '->' Type Block    (rule 5)

	L_ident        shift, and enter state 2

	Ident          goto state 13

State 13

	Def -> 'def' Ident . '(' ListArg ')' '->' Type Block    (rule 5)

	'('            shift, and enter state 20


State 14

	Type -> 'Function' '(' . ListType ')' Type          (rule 34)

	')'            reduce using rule 35
	'Bool'         shift, and enter state 7
	'Function'     shift, and enter state 8
	'Int'          shift, and enter state 9
	'String'       shift, and enter state 10
	'Void'         shift, and enter state 11

	Type           goto state 18
	ListType       goto state 19

State 15

	Def -> Type Ident . '=' Expr                        (rule 6)

	'='            shift, and enter state 17


State 16

	ListDef -> Def ListDef .                            (rule 8)

	%eof           reduce using rule 8


State 17

	Def -> Type Ident '=' . Expr                        (rule 6)

	'('            shift, and enter state 36
	'-'            shift, and enter state 37
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'not'          shift, and enter state 40
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 26
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 34
	Expr           goto state 35

State 18

	ListType -> Type .                                  (rule 36)
	ListType -> Type . ',' ListType                     (rule 37)

	')'            reduce using rule 36
	','            shift, and enter state 25


State 19

	Type -> 'Function' '(' ListType . ')' Type          (rule 34)

	')'            shift, and enter state 24


State 20

	Def -> 'def' Ident '(' . ListArg ')' '->' Type Block    (rule 5)

	')'            reduce using rule 11
	'Bool'         shift, and enter state 7
	'Function'     shift, and enter state 8
	'Int'          shift, and enter state 9
	'String'       shift, and enter state 10
	'Void'         shift, and enter state 11

	Arg            goto state 21
	ListArg        goto state 22
	Type           goto state 23

State 21

	ListArg -> Arg .                                    (rule 12)
	ListArg -> Arg . ',' ListArg                        (rule 13)

	')'            reduce using rule 12
	','            shift, and enter state 68


State 22

	Def -> 'def' Ident '(' ListArg . ')' '->' Type Block    (rule 5)

	')'            shift, and enter state 67


State 23

	Arg -> Type . Ident                                 (rule 9)
	Arg -> Type . '&' Ident                             (rule 10)

	'&'            shift, and enter state 66
	L_ident        shift, and enter state 2

	Ident          goto state 65

State 24

	Type -> 'Function' '(' ListType ')' . Type          (rule 34)

	'Bool'         shift, and enter state 7
	'Function'     shift, and enter state 8
	'Int'          shift, and enter state 9
	'String'       shift, and enter state 10
	'Void'         shift, and enter state 11

	Type           goto state 64

State 25

	ListType -> Type ',' . ListType                     (rule 37)

	')'            reduce using rule 35
	'Bool'         shift, and enter state 7
	'Function'     shift, and enter state 8
	'Int'          shift, and enter state 9
	'String'       shift, and enter state 10
	'Void'         shift, and enter state 11

	Type           goto state 18
	ListType       goto state 63

State 26

	Expr6 -> Ident .                                    (rule 38)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 42)

	'!='           reduce using rule 38
	'%'            reduce using rule 38
	'('            shift, and enter state 62
			(reduce using rule 38)

	')'            reduce using rule 38
	'*'            reduce using rule 38
	'+'            reduce using rule 38
	','            reduce using rule 38
	'-'            reduce using rule 38
	'/'            reduce using rule 38
	';'            reduce using rule 38
	'<'            reduce using rule 38
	'<='           reduce using rule 38
	'=='           reduce using rule 38
	'>'            reduce using rule 38
	'>='           reduce using rule 38
	'Bool'         reduce using rule 38
	'False'        reduce using rule 38
	'Function'     reduce using rule 38
	'Int'          reduce using rule 38
	'String'       reduce using rule 38
	'True'         reduce using rule 38
	'Void'         reduce using rule 38
	'and'          reduce using rule 38
	'break'        reduce using rule 38
	'continue'     reduce using rule 38
	'def'          reduce using rule 38
	'if'           reduce using rule 38
	'ife'          reduce using rule 38
	'not'          reduce using rule 38
	'or'           reduce using rule 38
	'pass'         reduce using rule 38
	'print'        reduce using rule 38
	'return'       reduce using rule 38
	'while'        reduce using rule 38
	'{'            reduce using rule 38
	L_ident        reduce using rule 38
	L_integ        reduce using rule 38
	L_quoted       reduce using rule 38
	%eof           reduce using rule 38


State 27

	Expr6 -> Integer .                                  (rule 39)

	'!='           reduce using rule 39
	'%'            reduce using rule 39
	'('            reduce using rule 39
	')'            reduce using rule 39
	'*'            reduce using rule 39
	'+'            reduce using rule 39
	','            reduce using rule 39
	'-'            reduce using rule 39
	'/'            reduce using rule 39
	';'            reduce using rule 39
	'<'            reduce using rule 39
	'<='           reduce using rule 39
	'=='           reduce using rule 39
	'>'            reduce using rule 39
	'>='           reduce using rule 39
	'Bool'         reduce using rule 39
	'False'        reduce using rule 39
	'Function'     reduce using rule 39
	'Int'          reduce using rule 39
	'String'       reduce using rule 39
	'True'         reduce using rule 39
	'Void'         reduce using rule 39
	'and'          reduce using rule 39
	'break'        reduce using rule 39
	'continue'     reduce using rule 39
	'def'          reduce using rule 39
	'if'           reduce using rule 39
	'ife'          reduce using rule 39
	'not'          reduce using rule 39
	'or'           reduce using rule 39
	'pass'         reduce using rule 39
	'print'        reduce using rule 39
	'return'       reduce using rule 39
	'while'        reduce using rule 39
	'{'            reduce using rule 39
	L_ident        reduce using rule 39
	L_integ        reduce using rule 39
	L_quoted       reduce using rule 39
	%eof           reduce using rule 39


State 28

	Expr6 -> String .                                   (rule 43)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'('            reduce using rule 43
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'/'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'Bool'         reduce using rule 43
	'False'        reduce using rule 43
	'Function'     reduce using rule 43
	'Int'          reduce using rule 43
	'String'       reduce using rule 43
	'True'         reduce using rule 43
	'Void'         reduce using rule 43
	'and'          reduce using rule 43
	'break'        reduce using rule 43
	'continue'     reduce using rule 43
	'def'          reduce using rule 43
	'if'           reduce using rule 43
	'ife'          reduce using rule 43
	'not'          reduce using rule 43
	'or'           reduce using rule 43
	'pass'         reduce using rule 43
	'print'        reduce using rule 43
	'return'       reduce using rule 43
	'while'        reduce using rule 43
	'{'            reduce using rule 43
	L_ident        reduce using rule 43
	L_integ        reduce using rule 43
	L_quoted       reduce using rule 43
	%eof           reduce using rule 43


State 29

	Expr5 -> Expr6 .                                    (rule 47)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'('            reduce using rule 47
	')'            reduce using rule 47
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'/'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'Bool'         reduce using rule 47
	'False'        reduce using rule 47
	'Function'     reduce using rule 47
	'Int'          reduce using rule 47
	'String'       reduce using rule 47
	'True'         reduce using rule 47
	'Void'         reduce using rule 47
	'and'          reduce using rule 47
	'break'        reduce using rule 47
	'continue'     reduce using rule 47
	'def'          reduce using rule 47
	'if'           reduce using rule 47
	'ife'          reduce using rule 47
	'not'          reduce using rule 47
	'or'           reduce using rule 47
	'pass'         reduce using rule 47
	'print'        reduce using rule 47
	'return'       reduce using rule 47
	'while'        reduce using rule 47
	'{'            reduce using rule 47
	L_ident        reduce using rule 47
	L_integ        reduce using rule 47
	L_quoted       reduce using rule 47
	%eof           reduce using rule 47


State 30

	Expr4 -> Expr5 .                                    (rule 49)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'('            reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'Bool'         reduce using rule 49
	'False'        reduce using rule 49
	'Function'     reduce using rule 49
	'Int'          reduce using rule 49
	'String'       reduce using rule 49
	'True'         reduce using rule 49
	'Void'         reduce using rule 49
	'and'          reduce using rule 49
	'break'        reduce using rule 49
	'continue'     reduce using rule 49
	'def'          reduce using rule 49
	'if'           reduce using rule 49
	'ife'          reduce using rule 49
	'not'          reduce using rule 49
	'or'           reduce using rule 49
	'pass'         reduce using rule 49
	'print'        reduce using rule 49
	'return'       reduce using rule 49
	'while'        reduce using rule 49
	'{'            reduce using rule 49
	L_ident        reduce using rule 49
	L_integ        reduce using rule 49
	L_quoted       reduce using rule 49
	%eof           reduce using rule 49


State 31

	Expr4 -> Expr4 . MulOp Expr5                        (rule 48)
	Expr3 -> Expr4 .                                    (rule 51)

	'!='           reduce using rule 51
	'%'            shift, and enter state 59
	'('            reduce using rule 51
	')'            reduce using rule 51
	'*'            shift, and enter state 60
	'+'            reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'/'            shift, and enter state 61
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'Bool'         reduce using rule 51
	'False'        reduce using rule 51
	'Function'     reduce using rule 51
	'Int'          reduce using rule 51
	'String'       reduce using rule 51
	'True'         reduce using rule 51
	'Void'         reduce using rule 51
	'and'          reduce using rule 51
	'break'        reduce using rule 51
	'continue'     reduce using rule 51
	'def'          reduce using rule 51
	'if'           reduce using rule 51
	'ife'          reduce using rule 51
	'not'          reduce using rule 51
	'or'           reduce using rule 51
	'pass'         reduce using rule 51
	'print'        reduce using rule 51
	'return'       reduce using rule 51
	'while'        reduce using rule 51
	'{'            reduce using rule 51
	L_ident        reduce using rule 51
	L_integ        reduce using rule 51
	L_quoted       reduce using rule 51
	%eof           reduce using rule 51

	MulOp          goto state 58

State 32

	Expr3 -> Expr3 . AddOp Expr4                        (rule 50)
	Expr2 -> Expr3 .                                    (rule 53)

	'!='           reduce using rule 53
	'('            reduce using rule 53
	')'            reduce using rule 53
	'+'            shift, and enter state 56
	','            reduce using rule 53
	'-'            shift, and enter state 57
			(reduce using rule 53)

	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'Bool'         reduce using rule 53
	'False'        reduce using rule 53
	'Function'     reduce using rule 53
	'Int'          reduce using rule 53
	'String'       reduce using rule 53
	'True'         reduce using rule 53
	'Void'         reduce using rule 53
	'and'          reduce using rule 53
	'break'        reduce using rule 53
	'continue'     reduce using rule 53
	'def'          reduce using rule 53
	'if'           reduce using rule 53
	'ife'          reduce using rule 53
	'not'          reduce using rule 53
	'or'           reduce using rule 53
	'pass'         reduce using rule 53
	'print'        reduce using rule 53
	'return'       reduce using rule 53
	'while'        reduce using rule 53
	'{'            reduce using rule 53
	L_ident        reduce using rule 53
	L_integ        reduce using rule 53
	L_quoted       reduce using rule 53
	%eof           reduce using rule 53

	AddOp          goto state 55

State 33

	Expr2 -> Expr2 . RelOp Expr3                        (rule 52)
	Expr1 -> Expr2 . 'and' Expr1                        (rule 54)
	Expr1 -> Expr2 .                                    (rule 55)

	'!='           shift, and enter state 48
	'('            reduce using rule 55
	')'            reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	';'            reduce using rule 55
	'<'            shift, and enter state 49
	'<='           shift, and enter state 50
	'=='           shift, and enter state 51
	'>'            shift, and enter state 52
	'>='           shift, and enter state 53
	'Bool'         reduce using rule 55
	'False'        reduce using rule 55
	'Function'     reduce using rule 55
	'Int'          reduce using rule 55
	'String'       reduce using rule 55
	'True'         reduce using rule 55
	'Void'         reduce using rule 55
	'and'          shift, and enter state 54
	'break'        reduce using rule 55
	'continue'     reduce using rule 55
	'def'          reduce using rule 55
	'if'           reduce using rule 55
	'ife'          reduce using rule 55
	'not'          reduce using rule 55
	'or'           reduce using rule 55
	'pass'         reduce using rule 55
	'print'        reduce using rule 55
	'return'       reduce using rule 55
	'while'        reduce using rule 55
	'{'            reduce using rule 55
	L_ident        reduce using rule 55
	L_integ        reduce using rule 55
	L_quoted       reduce using rule 55
	%eof           reduce using rule 55

	RelOp          goto state 47

State 34

	Expr -> Expr1 . 'or' Expr                           (rule 56)
	Expr -> Expr1 .                                     (rule 57)

	'('            reduce using rule 57
	')'            reduce using rule 57
	','            reduce using rule 57
	'-'            reduce using rule 57
	';'            reduce using rule 57
	'Bool'         reduce using rule 57
	'False'        reduce using rule 57
	'Function'     reduce using rule 57
	'Int'          reduce using rule 57
	'String'       reduce using rule 57
	'True'         reduce using rule 57
	'Void'         reduce using rule 57
	'break'        reduce using rule 57
	'continue'     reduce using rule 57
	'def'          reduce using rule 57
	'if'           reduce using rule 57
	'ife'          reduce using rule 57
	'not'          reduce using rule 57
	'or'           shift, and enter state 46
	'pass'         reduce using rule 57
	'print'        reduce using rule 57
	'return'       reduce using rule 57
	'while'        reduce using rule 57
	'{'            reduce using rule 57
	L_ident        reduce using rule 57
	L_integ        reduce using rule 57
	L_quoted       reduce using rule 57
	%eof           reduce using rule 57


State 35

	Def -> Type Ident '=' Expr .                        (rule 6)

	';'            reduce using rule 6
	'Bool'         reduce using rule 6
	'Function'     reduce using rule 6
	'Int'          reduce using rule 6
	'String'       reduce using rule 6
	'Void'         reduce using rule 6
	'def'          reduce using rule 6
	%eof           reduce using rule 6


State 36

	Expr6 -> '(' . Expr ')'                             (rule 44)

	'('            shift, and enter state 36
	'-'            shift, and enter state 37
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'not'          shift, and enter state 40
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 26
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 34
	Expr           goto state 45

State 37

	Expr5 -> '-' . Expr6                                (rule 45)

	'('            shift, and enter state 36
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 26
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 44

State 38

	Expr6 -> 'False' .                                  (rule 41)

	'!='           reduce using rule 41
	'%'            reduce using rule 41
	'('            reduce using rule 41
	')'            reduce using rule 41
	'*'            reduce using rule 41
	'+'            reduce using rule 41
	','            reduce using rule 41
	'-'            reduce using rule 41
	'/'            reduce using rule 41
	';'            reduce using rule 41
	'<'            reduce using rule 41
	'<='           reduce using rule 41
	'=='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	'Bool'         reduce using rule 41
	'False'        reduce using rule 41
	'Function'     reduce using rule 41
	'Int'          reduce using rule 41
	'String'       reduce using rule 41
	'True'         reduce using rule 41
	'Void'         reduce using rule 41
	'and'          reduce using rule 41
	'break'        reduce using rule 41
	'continue'     reduce using rule 41
	'def'          reduce using rule 41
	'if'           reduce using rule 41
	'ife'          reduce using rule 41
	'not'          reduce using rule 41
	'or'           reduce using rule 41
	'pass'         reduce using rule 41
	'print'        reduce using rule 41
	'return'       reduce using rule 41
	'while'        reduce using rule 41
	'{'            reduce using rule 41
	L_ident        reduce using rule 41
	L_integ        reduce using rule 41
	L_quoted       reduce using rule 41
	%eof           reduce using rule 41


State 39

	Expr6 -> 'True' .                                   (rule 40)

	'!='           reduce using rule 40
	'%'            reduce using rule 40
	'('            reduce using rule 40
	')'            reduce using rule 40
	'*'            reduce using rule 40
	'+'            reduce using rule 40
	','            reduce using rule 40
	'-'            reduce using rule 40
	'/'            reduce using rule 40
	';'            reduce using rule 40
	'<'            reduce using rule 40
	'<='           reduce using rule 40
	'=='           reduce using rule 40
	'>'            reduce using rule 40
	'>='           reduce using rule 40
	'Bool'         reduce using rule 40
	'False'        reduce using rule 40
	'Function'     reduce using rule 40
	'Int'          reduce using rule 40
	'String'       reduce using rule 40
	'True'         reduce using rule 40
	'Void'         reduce using rule 40
	'and'          reduce using rule 40
	'break'        reduce using rule 40
	'continue'     reduce using rule 40
	'def'          reduce using rule 40
	'if'           reduce using rule 40
	'ife'          reduce using rule 40
	'not'          reduce using rule 40
	'or'           reduce using rule 40
	'pass'         reduce using rule 40
	'print'        reduce using rule 40
	'return'       reduce using rule 40
	'while'        reduce using rule 40
	'{'            reduce using rule 40
	L_ident        reduce using rule 40
	L_integ        reduce using rule 40
	L_quoted       reduce using rule 40
	%eof           reduce using rule 40


State 40

	Expr5 -> 'not' . Expr6                              (rule 46)

	'('            shift, and enter state 36
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 26
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 43

State 41

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'('            reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'Bool'         reduce using rule 2
	'False'        reduce using rule 2
	'Function'     reduce using rule 2
	'Int'          reduce using rule 2
	'String'       reduce using rule 2
	'True'         reduce using rule 2
	'Void'         reduce using rule 2
	'and'          reduce using rule 2
	'break'        reduce using rule 2
	'continue'     reduce using rule 2
	'def'          reduce using rule 2
	'if'           reduce using rule 2
	'ife'          reduce using rule 2
	'not'          reduce using rule 2
	'or'           reduce using rule 2
	'pass'         reduce using rule 2
	'print'        reduce using rule 2
	'return'       reduce using rule 2
	'while'        reduce using rule 2
	'{'            reduce using rule 2
	L_ident        reduce using rule 2
	L_integ        reduce using rule 2
	L_quoted       reduce using rule 2
	%eof           reduce using rule 2


State 42

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'('            reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'Bool'         reduce using rule 3
	'False'        reduce using rule 3
	'Function'     reduce using rule 3
	'Int'          reduce using rule 3
	'String'       reduce using rule 3
	'True'         reduce using rule 3
	'Void'         reduce using rule 3
	'and'          reduce using rule 3
	'break'        reduce using rule 3
	'continue'     reduce using rule 3
	'def'          reduce using rule 3
	'if'           reduce using rule 3
	'ife'          reduce using rule 3
	'not'          reduce using rule 3
	'or'           reduce using rule 3
	'pass'         reduce using rule 3
	'print'        reduce using rule 3
	'return'       reduce using rule 3
	'while'        reduce using rule 3
	'{'            reduce using rule 3
	L_ident        reduce using rule 3
	L_integ        reduce using rule 3
	L_quoted       reduce using rule 3
	%eof           reduce using rule 3


State 43

	Expr5 -> 'not' Expr6 .                              (rule 46)

	'!='           reduce using rule 46
	'%'            reduce using rule 46
	'('            reduce using rule 46
	')'            reduce using rule 46
	'*'            reduce using rule 46
	'+'            reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'/'            reduce using rule 46
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	'Bool'         reduce using rule 46
	'False'        reduce using rule 46
	'Function'     reduce using rule 46
	'Int'          reduce using rule 46
	'String'       reduce using rule 46
	'True'         reduce using rule 46
	'Void'         reduce using rule 46
	'and'          reduce using rule 46
	'break'        reduce using rule 46
	'continue'     reduce using rule 46
	'def'          reduce using rule 46
	'if'           reduce using rule 46
	'ife'          reduce using rule 46
	'not'          reduce using rule 46
	'or'           reduce using rule 46
	'pass'         reduce using rule 46
	'print'        reduce using rule 46
	'return'       reduce using rule 46
	'while'        reduce using rule 46
	'{'            reduce using rule 46
	L_ident        reduce using rule 46
	L_integ        reduce using rule 46
	L_quoted       reduce using rule 46
	%eof           reduce using rule 46


State 44

	Expr5 -> '-' Expr6 .                                (rule 45)

	'!='           reduce using rule 45
	'%'            reduce using rule 45
	'('            reduce using rule 45
	')'            reduce using rule 45
	'*'            reduce using rule 45
	'+'            reduce using rule 45
	','            reduce using rule 45
	'-'            reduce using rule 45
	'/'            reduce using rule 45
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'Bool'         reduce using rule 45
	'False'        reduce using rule 45
	'Function'     reduce using rule 45
	'Int'          reduce using rule 45
	'String'       reduce using rule 45
	'True'         reduce using rule 45
	'Void'         reduce using rule 45
	'and'          reduce using rule 45
	'break'        reduce using rule 45
	'continue'     reduce using rule 45
	'def'          reduce using rule 45
	'if'           reduce using rule 45
	'ife'          reduce using rule 45
	'not'          reduce using rule 45
	'or'           reduce using rule 45
	'pass'         reduce using rule 45
	'print'        reduce using rule 45
	'return'       reduce using rule 45
	'while'        reduce using rule 45
	'{'            reduce using rule 45
	L_ident        reduce using rule 45
	L_integ        reduce using rule 45
	L_quoted       reduce using rule 45
	%eof           reduce using rule 45


State 45

	Expr6 -> '(' Expr . ')'                             (rule 44)

	')'            shift, and enter state 79


State 46

	Expr -> Expr1 'or' . Expr                           (rule 56)

	'('            shift, and enter state 36
	'-'            shift, and enter state 37
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'not'          shift, and enter state 40
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 26
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 34
	Expr           goto state 78

State 47

	Expr2 -> Expr2 RelOp . Expr3                        (rule 52)

	'('            shift, and enter state 36
	'-'            shift, and enter state 37
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'not'          shift, and enter state 40
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 26
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 77

State 48

	RelOp -> '!=' .                                     (rule 71)

	'('            reduce using rule 71
	'-'            reduce using rule 71
	'False'        reduce using rule 71
	'True'         reduce using rule 71
	'not'          reduce using rule 71
	L_ident        reduce using rule 71
	L_integ        reduce using rule 71
	L_quoted       reduce using rule 71


State 49

	RelOp -> '<' .                                      (rule 66)

	'('            reduce using rule 66
	'-'            reduce using rule 66
	'False'        reduce using rule 66
	'True'         reduce using rule 66
	'not'          reduce using rule 66
	L_ident        reduce using rule 66
	L_integ        reduce using rule 66
	L_quoted       reduce using rule 66


State 50

	RelOp -> '<=' .                                     (rule 67)

	'('            reduce using rule 67
	'-'            reduce using rule 67
	'False'        reduce using rule 67
	'True'         reduce using rule 67
	'not'          reduce using rule 67
	L_ident        reduce using rule 67
	L_integ        reduce using rule 67
	L_quoted       reduce using rule 67


State 51

	RelOp -> '==' .                                     (rule 70)

	'('            reduce using rule 70
	'-'            reduce using rule 70
	'False'        reduce using rule 70
	'True'         reduce using rule 70
	'not'          reduce using rule 70
	L_ident        reduce using rule 70
	L_integ        reduce using rule 70
	L_quoted       reduce using rule 70


State 52

	RelOp -> '>' .                                      (rule 68)

	'('            reduce using rule 68
	'-'            reduce using rule 68
	'False'        reduce using rule 68
	'True'         reduce using rule 68
	'not'          reduce using rule 68
	L_ident        reduce using rule 68
	L_integ        reduce using rule 68
	L_quoted       reduce using rule 68


State 53

	RelOp -> '>=' .                                     (rule 69)

	'('            reduce using rule 69
	'-'            reduce using rule 69
	'False'        reduce using rule 69
	'True'         reduce using rule 69
	'not'          reduce using rule 69
	L_ident        reduce using rule 69
	L_integ        reduce using rule 69
	L_quoted       reduce using rule 69


State 54

	Expr1 -> Expr2 'and' . Expr1                        (rule 54)

	'('            shift, and enter state 36
	'-'            shift, and enter state 37
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'not'          shift, and enter state 40
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 26
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 76

State 55

	Expr3 -> Expr3 AddOp . Expr4                        (rule 50)

	'('            shift, and enter state 36
	'-'            shift, and enter state 37
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'not'          shift, and enter state 40
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 26
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 75

State 56

	AddOp -> '+' .                                      (rule 61)

	'('            reduce using rule 61
	'-'            reduce using rule 61
	'False'        reduce using rule 61
	'True'         reduce using rule 61
	'not'          reduce using rule 61
	L_ident        reduce using rule 61
	L_integ        reduce using rule 61
	L_quoted       reduce using rule 61


State 57

	AddOp -> '-' .                                      (rule 62)

	'('            reduce using rule 62
	'-'            reduce using rule 62
	'False'        reduce using rule 62
	'True'         reduce using rule 62
	'not'          reduce using rule 62
	L_ident        reduce using rule 62
	L_integ        reduce using rule 62
	L_quoted       reduce using rule 62


State 58

	Expr4 -> Expr4 MulOp . Expr5                        (rule 48)

	'('            shift, and enter state 36
	'-'            shift, and enter state 37
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'not'          shift, and enter state 40
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 26
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 29
	Expr5          goto state 74

State 59

	MulOp -> '%' .                                      (rule 65)

	'('            reduce using rule 65
	'-'            reduce using rule 65
	'False'        reduce using rule 65
	'True'         reduce using rule 65
	'not'          reduce using rule 65
	L_ident        reduce using rule 65
	L_integ        reduce using rule 65
	L_quoted       reduce using rule 65


State 60

	MulOp -> '*' .                                      (rule 63)

	'('            reduce using rule 63
	'-'            reduce using rule 63
	'False'        reduce using rule 63
	'True'         reduce using rule 63
	'not'          reduce using rule 63
	L_ident        reduce using rule 63
	L_integ        reduce using rule 63
	L_quoted       reduce using rule 63


State 61

	MulOp -> '/' .                                      (rule 64)

	'('            reduce using rule 64
	'-'            reduce using rule 64
	'False'        reduce using rule 64
	'True'         reduce using rule 64
	'not'          reduce using rule 64
	L_ident        reduce using rule 64
	L_integ        reduce using rule 64
	L_quoted       reduce using rule 64


State 62

	Expr6 -> Ident '(' . ListExpr ')'                   (rule 42)

	'('            shift, and enter state 36
	')'            reduce using rule 58
	'-'            shift, and enter state 37
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'not'          shift, and enter state 40
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 26
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 34
	Expr           goto state 72
	ListExpr       goto state 73

State 63

	ListType -> Type ',' ListType .                     (rule 37)

	')'            reduce using rule 37


State 64

	Type -> 'Function' '(' ListType ')' Type .          (rule 34)

	'&'            reduce using rule 34
	')'            reduce using rule 34
	','            reduce using rule 34
	'{'            reduce using rule 34
	L_ident        reduce using rule 34


State 65

	Arg -> Type Ident .                                 (rule 9)

	')'            reduce using rule 9
	','            reduce using rule 9


State 66

	Arg -> Type '&' . Ident                             (rule 10)

	L_ident        shift, and enter state 2

	Ident          goto state 71

State 67

	Def -> 'def' Ident '(' ListArg ')' . '->' Type Block    (rule 5)

	'->'           shift, and enter state 70


State 68

	ListArg -> Arg ',' . ListArg                        (rule 13)

	')'            reduce using rule 11
	'Bool'         shift, and enter state 7
	'Function'     shift, and enter state 8
	'Int'          shift, and enter state 9
	'String'       shift, and enter state 10
	'Void'         shift, and enter state 11

	Arg            goto state 21
	ListArg        goto state 69
	Type           goto state 23

State 69

	ListArg -> Arg ',' ListArg .                        (rule 13)

	')'            reduce using rule 13


State 70

	Def -> 'def' Ident '(' ListArg ')' '->' . Type Block    (rule 5)

	'Bool'         shift, and enter state 7
	'Function'     shift, and enter state 8
	'Int'          shift, and enter state 9
	'String'       shift, and enter state 10
	'Void'         shift, and enter state 11

	Type           goto state 82

State 71

	Arg -> Type '&' Ident .                             (rule 10)

	')'            reduce using rule 10
	','            reduce using rule 10


State 72

	ListExpr -> Expr .                                  (rule 59)
	ListExpr -> Expr . ',' ListExpr                     (rule 60)

	')'            reduce using rule 59
	','            shift, and enter state 81


State 73

	Expr6 -> Ident '(' ListExpr . ')'                   (rule 42)

	')'            shift, and enter state 80


State 74

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 48)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'('            reduce using rule 48
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'Bool'         reduce using rule 48
	'False'        reduce using rule 48
	'Function'     reduce using rule 48
	'Int'          reduce using rule 48
	'String'       reduce using rule 48
	'True'         reduce using rule 48
	'Void'         reduce using rule 48
	'and'          reduce using rule 48
	'break'        reduce using rule 48
	'continue'     reduce using rule 48
	'def'          reduce using rule 48
	'if'           reduce using rule 48
	'ife'          reduce using rule 48
	'not'          reduce using rule 48
	'or'           reduce using rule 48
	'pass'         reduce using rule 48
	'print'        reduce using rule 48
	'return'       reduce using rule 48
	'while'        reduce using rule 48
	'{'            reduce using rule 48
	L_ident        reduce using rule 48
	L_integ        reduce using rule 48
	L_quoted       reduce using rule 48
	%eof           reduce using rule 48


State 75

	Expr4 -> Expr4 . MulOp Expr5                        (rule 48)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 50)

	'!='           reduce using rule 50
	'%'            shift, and enter state 59
	'('            reduce using rule 50
	')'            reduce using rule 50
	'*'            shift, and enter state 60
	'+'            reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'/'            shift, and enter state 61
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'Bool'         reduce using rule 50
	'False'        reduce using rule 50
	'Function'     reduce using rule 50
	'Int'          reduce using rule 50
	'String'       reduce using rule 50
	'True'         reduce using rule 50
	'Void'         reduce using rule 50
	'and'          reduce using rule 50
	'break'        reduce using rule 50
	'continue'     reduce using rule 50
	'def'          reduce using rule 50
	'if'           reduce using rule 50
	'ife'          reduce using rule 50
	'not'          reduce using rule 50
	'or'           reduce using rule 50
	'pass'         reduce using rule 50
	'print'        reduce using rule 50
	'return'       reduce using rule 50
	'while'        reduce using rule 50
	'{'            reduce using rule 50
	L_ident        reduce using rule 50
	L_integ        reduce using rule 50
	L_quoted       reduce using rule 50
	%eof           reduce using rule 50

	MulOp          goto state 58

State 76

	Expr1 -> Expr2 'and' Expr1 .                        (rule 54)

	'('            reduce using rule 54
	')'            reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	';'            reduce using rule 54
	'Bool'         reduce using rule 54
	'False'        reduce using rule 54
	'Function'     reduce using rule 54
	'Int'          reduce using rule 54
	'String'       reduce using rule 54
	'True'         reduce using rule 54
	'Void'         reduce using rule 54
	'break'        reduce using rule 54
	'continue'     reduce using rule 54
	'def'          reduce using rule 54
	'if'           reduce using rule 54
	'ife'          reduce using rule 54
	'not'          reduce using rule 54
	'or'           reduce using rule 54
	'pass'         reduce using rule 54
	'print'        reduce using rule 54
	'return'       reduce using rule 54
	'while'        reduce using rule 54
	'{'            reduce using rule 54
	L_ident        reduce using rule 54
	L_integ        reduce using rule 54
	L_quoted       reduce using rule 54
	%eof           reduce using rule 54


State 77

	Expr3 -> Expr3 . AddOp Expr4                        (rule 50)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 52)

	'!='           reduce using rule 52
	'('            reduce using rule 52
	')'            reduce using rule 52
	'+'            shift, and enter state 56
	','            reduce using rule 52
	'-'            shift, and enter state 57
			(reduce using rule 52)

	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'Bool'         reduce using rule 52
	'False'        reduce using rule 52
	'Function'     reduce using rule 52
	'Int'          reduce using rule 52
	'String'       reduce using rule 52
	'True'         reduce using rule 52
	'Void'         reduce using rule 52
	'and'          reduce using rule 52
	'break'        reduce using rule 52
	'continue'     reduce using rule 52
	'def'          reduce using rule 52
	'if'           reduce using rule 52
	'ife'          reduce using rule 52
	'not'          reduce using rule 52
	'or'           reduce using rule 52
	'pass'         reduce using rule 52
	'print'        reduce using rule 52
	'return'       reduce using rule 52
	'while'        reduce using rule 52
	'{'            reduce using rule 52
	L_ident        reduce using rule 52
	L_integ        reduce using rule 52
	L_quoted       reduce using rule 52
	%eof           reduce using rule 52

	AddOp          goto state 55

State 78

	Expr -> Expr1 'or' Expr .                           (rule 56)

	'('            reduce using rule 56
	')'            reduce using rule 56
	','            reduce using rule 56
	'-'            reduce using rule 56
	';'            reduce using rule 56
	'Bool'         reduce using rule 56
	'False'        reduce using rule 56
	'Function'     reduce using rule 56
	'Int'          reduce using rule 56
	'String'       reduce using rule 56
	'True'         reduce using rule 56
	'Void'         reduce using rule 56
	'break'        reduce using rule 56
	'continue'     reduce using rule 56
	'def'          reduce using rule 56
	'if'           reduce using rule 56
	'ife'          reduce using rule 56
	'not'          reduce using rule 56
	'pass'         reduce using rule 56
	'print'        reduce using rule 56
	'return'       reduce using rule 56
	'while'        reduce using rule 56
	'{'            reduce using rule 56
	L_ident        reduce using rule 56
	L_integ        reduce using rule 56
	L_quoted       reduce using rule 56
	%eof           reduce using rule 56


State 79

	Expr6 -> '(' Expr ')' .                             (rule 44)

	'!='           reduce using rule 44
	'%'            reduce using rule 44
	'('            reduce using rule 44
	')'            reduce using rule 44
	'*'            reduce using rule 44
	'+'            reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'/'            reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'Bool'         reduce using rule 44
	'False'        reduce using rule 44
	'Function'     reduce using rule 44
	'Int'          reduce using rule 44
	'String'       reduce using rule 44
	'True'         reduce using rule 44
	'Void'         reduce using rule 44
	'and'          reduce using rule 44
	'break'        reduce using rule 44
	'continue'     reduce using rule 44
	'def'          reduce using rule 44
	'if'           reduce using rule 44
	'ife'          reduce using rule 44
	'not'          reduce using rule 44
	'or'           reduce using rule 44
	'pass'         reduce using rule 44
	'print'        reduce using rule 44
	'return'       reduce using rule 44
	'while'        reduce using rule 44
	'{'            reduce using rule 44
	L_ident        reduce using rule 44
	L_integ        reduce using rule 44
	L_quoted       reduce using rule 44
	%eof           reduce using rule 44


State 80

	Expr6 -> Ident '(' ListExpr ')' .                   (rule 42)

	'!='           reduce using rule 42
	'%'            reduce using rule 42
	'('            reduce using rule 42
	')'            reduce using rule 42
	'*'            reduce using rule 42
	'+'            reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'/'            reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	'Bool'         reduce using rule 42
	'False'        reduce using rule 42
	'Function'     reduce using rule 42
	'Int'          reduce using rule 42
	'String'       reduce using rule 42
	'True'         reduce using rule 42
	'Void'         reduce using rule 42
	'and'          reduce using rule 42
	'break'        reduce using rule 42
	'continue'     reduce using rule 42
	'def'          reduce using rule 42
	'if'           reduce using rule 42
	'ife'          reduce using rule 42
	'not'          reduce using rule 42
	'or'           reduce using rule 42
	'pass'         reduce using rule 42
	'print'        reduce using rule 42
	'return'       reduce using rule 42
	'while'        reduce using rule 42
	'{'            reduce using rule 42
	L_ident        reduce using rule 42
	L_integ        reduce using rule 42
	L_quoted       reduce using rule 42
	%eof           reduce using rule 42


State 81

	ListExpr -> Expr ',' . ListExpr                     (rule 60)

	'('            shift, and enter state 36
	')'            reduce using rule 58
	'-'            shift, and enter state 37
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'not'          shift, and enter state 40
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 26
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 34
	Expr           goto state 72
	ListExpr       goto state 85

State 82

	Def -> 'def' Ident '(' ListArg ')' '->' Type . Block    (rule 5)

	'{'            shift, and enter state 84

	Block          goto state 83

State 83

	Def -> 'def' Ident '(' ListArg ')' '->' Type Block .    (rule 5)

	';'            reduce using rule 5
	'Bool'         reduce using rule 5
	'Function'     reduce using rule 5
	'Int'          reduce using rule 5
	'String'       reduce using rule 5
	'Void'         reduce using rule 5
	'def'          reduce using rule 5
	%eof           reduce using rule 5


State 84

	Block -> '{' . ListStmt '}'                         (rule 14)

	'('            reduce using rule 15
	'-'            reduce using rule 15
	'Bool'         reduce using rule 15
	'False'        reduce using rule 15
	'Function'     reduce using rule 15
	'Int'          reduce using rule 15
	'String'       reduce using rule 15
	'True'         reduce using rule 15
	'Void'         reduce using rule 15
	'break'        reduce using rule 15
	'continue'     reduce using rule 15
	'def'          reduce using rule 15
	'if'           reduce using rule 15
	'ife'          reduce using rule 15
	'not'          reduce using rule 15
	'pass'         reduce using rule 15
	'print'        reduce using rule 15
	'return'       reduce using rule 15
	'while'        reduce using rule 15
	'{'            reduce using rule 15
	'}'            reduce using rule 15
	L_ident        reduce using rule 15
	L_integ        reduce using rule 15
	L_quoted       reduce using rule 15

	ListStmt       goto state 86

State 85

	ListExpr -> Expr ',' ListExpr .                     (rule 60)

	')'            reduce using rule 60


State 86

	Block -> '{' ListStmt . '}'                         (rule 14)
	ListStmt -> ListStmt . Stmt                         (rule 16)

	'('            shift, and enter state 36
	'-'            shift, and enter state 37
	'Bool'         shift, and enter state 7
	'False'        shift, and enter state 38
	'Function'     shift, and enter state 8
	'Int'          shift, and enter state 9
	'String'       shift, and enter state 10
	'True'         shift, and enter state 39
	'Void'         shift, and enter state 11
	'break'        shift, and enter state 92
	'continue'     shift, and enter state 93
	'def'          shift, and enter state 12
	'if'           shift, and enter state 94
	'ife'          shift, and enter state 95
	'not'          shift, and enter state 40
	'pass'         shift, and enter state 96
	'print'        shift, and enter state 97
	'return'       shift, and enter state 98
	'while'        shift, and enter state 99
	'{'            shift, and enter state 84
	'}'            shift, and enter state 100
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 87
	Integer        goto state 27
	String         goto state 28
	Def            goto state 88
	Block          goto state 89
	Stmt           goto state 90
	Type           goto state 6
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 34
	Expr           goto state 91

State 87

	Stmt -> Ident . '=' Expr ';'                        (rule 20)
	Expr6 -> Ident .                                    (rule 38)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 42)

	'!='           reduce using rule 38
	'%'            reduce using rule 38
	'('            shift, and enter state 62
	'*'            reduce using rule 38
	'+'            reduce using rule 38
	'-'            reduce using rule 38
	'/'            reduce using rule 38
	';'            reduce using rule 38
	'<'            reduce using rule 38
	'<='           reduce using rule 38
	'='            shift, and enter state 112
	'=='           reduce using rule 38
	'>'            reduce using rule 38
	'>='           reduce using rule 38
	'and'          reduce using rule 38
	'or'           reduce using rule 38


State 88

	Stmt -> Def . ';'                                   (rule 19)

	';'            shift, and enter state 111


State 89

	Stmt -> Block .                                     (rule 18)

	'('            reduce using rule 18
	'-'            reduce using rule 18
	'Bool'         reduce using rule 18
	'False'        reduce using rule 18
	'Function'     reduce using rule 18
	'Int'          reduce using rule 18
	'String'       reduce using rule 18
	'True'         reduce using rule 18
	'Void'         reduce using rule 18
	'break'        reduce using rule 18
	'continue'     reduce using rule 18
	'def'          reduce using rule 18
	'else'         reduce using rule 18
	'if'           reduce using rule 18
	'ife'          reduce using rule 18
	'not'          reduce using rule 18
	'pass'         reduce using rule 18
	'print'        reduce using rule 18
	'return'       reduce using rule 18
	'while'        reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18
	L_ident        reduce using rule 18
	L_integ        reduce using rule 18
	L_quoted       reduce using rule 18


State 90

	ListStmt -> ListStmt Stmt .                         (rule 16)

	'('            reduce using rule 16
	'-'            reduce using rule 16
	'Bool'         reduce using rule 16
	'False'        reduce using rule 16
	'Function'     reduce using rule 16
	'Int'          reduce using rule 16
	'String'       reduce using rule 16
	'True'         reduce using rule 16
	'Void'         reduce using rule 16
	'break'        reduce using rule 16
	'continue'     reduce using rule 16
	'def'          reduce using rule 16
	'if'           reduce using rule 16
	'ife'          reduce using rule 16
	'not'          reduce using rule 16
	'pass'         reduce using rule 16
	'print'        reduce using rule 16
	'return'       reduce using rule 16
	'while'        reduce using rule 16
	'{'            reduce using rule 16
	'}'            reduce using rule 16
	L_ident        reduce using rule 16
	L_integ        reduce using rule 16
	L_quoted       reduce using rule 16


State 91

	Stmt -> Expr . ';'                                  (rule 26)

	';'            shift, and enter state 110


State 92

	Stmt -> 'break' . ';'                               (rule 27)

	';'            shift, and enter state 109


State 93

	Stmt -> 'continue' . ';'                            (rule 28)

	';'            shift, and enter state 108


State 94

	Stmt -> 'if' . Expr Stmt                            (rule 23)

	'('            shift, and enter state 36
	'-'            shift, and enter state 37
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'not'          shift, and enter state 40
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 26
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 34
	Expr           goto state 107

State 95

	Stmt -> 'ife' . Expr Stmt 'else' Stmt               (rule 24)

	'('            shift, and enter state 36
	'-'            shift, and enter state 37
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'not'          shift, and enter state 40
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 26
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 34
	Expr           goto state 106

State 96

	Stmt -> 'pass' . ';'                                (rule 17)

	';'            shift, and enter state 105


State 97

	Stmt -> 'print' . '(' Expr ')' ';'                  (rule 29)

	'('            shift, and enter state 104


State 98

	Stmt -> 'return' . Expr ';'                         (rule 21)
	Stmt -> 'return' . ';'                              (rule 22)

	'('            shift, and enter state 36
	'-'            shift, and enter state 37
	';'            shift, and enter state 103
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'not'          shift, and enter state 40
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 26
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 34
	Expr           goto state 102

State 99

	Stmt -> 'while' . Expr Stmt                         (rule 25)

	'('            shift, and enter state 36
	'-'            shift, and enter state 37
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'not'          shift, and enter state 40
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 26
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 34
	Expr           goto state 101

State 100

	Block -> '{' ListStmt '}' .                         (rule 14)

	'('            reduce using rule 14
	'-'            reduce using rule 14
	';'            reduce using rule 14
	'Bool'         reduce using rule 14
	'False'        reduce using rule 14
	'Function'     reduce using rule 14
	'Int'          reduce using rule 14
	'String'       reduce using rule 14
	'True'         reduce using rule 14
	'Void'         reduce using rule 14
	'break'        reduce using rule 14
	'continue'     reduce using rule 14
	'def'          reduce using rule 14
	'else'         reduce using rule 14
	'if'           reduce using rule 14
	'ife'          reduce using rule 14
	'not'          reduce using rule 14
	'pass'         reduce using rule 14
	'print'        reduce using rule 14
	'return'       reduce using rule 14
	'while'        reduce using rule 14
	'{'            reduce using rule 14
	'}'            reduce using rule 14
	L_ident        reduce using rule 14
	L_integ        reduce using rule 14
	L_quoted       reduce using rule 14
	%eof           reduce using rule 14


State 101

	Stmt -> 'while' Expr . Stmt                         (rule 25)

	'('            shift, and enter state 36
	'-'            shift, and enter state 37
	'Bool'         shift, and enter state 7
	'False'        shift, and enter state 38
	'Function'     shift, and enter state 8
	'Int'          shift, and enter state 9
	'String'       shift, and enter state 10
	'True'         shift, and enter state 39
	'Void'         shift, and enter state 11
	'break'        shift, and enter state 92
	'continue'     shift, and enter state 93
	'def'          shift, and enter state 12
	'if'           shift, and enter state 94
	'ife'          shift, and enter state 95
	'not'          shift, and enter state 40
	'pass'         shift, and enter state 96
	'print'        shift, and enter state 97
	'return'       shift, and enter state 98
	'while'        shift, and enter state 99
	'{'            shift, and enter state 84
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 87
	Integer        goto state 27
	String         goto state 28
	Def            goto state 88
	Block          goto state 89
	Stmt           goto state 118
	Type           goto state 6
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 34
	Expr           goto state 91

State 102

	Stmt -> 'return' Expr . ';'                         (rule 21)

	';'            shift, and enter state 117


State 103

	Stmt -> 'return' ';' .                              (rule 22)

	'('            reduce using rule 22
	'-'            reduce using rule 22
	'Bool'         reduce using rule 22
	'False'        reduce using rule 22
	'Function'     reduce using rule 22
	'Int'          reduce using rule 22
	'String'       reduce using rule 22
	'True'         reduce using rule 22
	'Void'         reduce using rule 22
	'break'        reduce using rule 22
	'continue'     reduce using rule 22
	'def'          reduce using rule 22
	'else'         reduce using rule 22
	'if'           reduce using rule 22
	'ife'          reduce using rule 22
	'not'          reduce using rule 22
	'pass'         reduce using rule 22
	'print'        reduce using rule 22
	'return'       reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	L_ident        reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22


State 104

	Stmt -> 'print' '(' . Expr ')' ';'                  (rule 29)

	'('            shift, and enter state 36
	'-'            shift, and enter state 37
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'not'          shift, and enter state 40
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 26
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 34
	Expr           goto state 116

State 105

	Stmt -> 'pass' ';' .                                (rule 17)

	'('            reduce using rule 17
	'-'            reduce using rule 17
	'Bool'         reduce using rule 17
	'False'        reduce using rule 17
	'Function'     reduce using rule 17
	'Int'          reduce using rule 17
	'String'       reduce using rule 17
	'True'         reduce using rule 17
	'Void'         reduce using rule 17
	'break'        reduce using rule 17
	'continue'     reduce using rule 17
	'def'          reduce using rule 17
	'else'         reduce using rule 17
	'if'           reduce using rule 17
	'ife'          reduce using rule 17
	'not'          reduce using rule 17
	'pass'         reduce using rule 17
	'print'        reduce using rule 17
	'return'       reduce using rule 17
	'while'        reduce using rule 17
	'{'            reduce using rule 17
	'}'            reduce using rule 17
	L_ident        reduce using rule 17
	L_integ        reduce using rule 17
	L_quoted       reduce using rule 17


State 106

	Stmt -> 'ife' Expr . Stmt 'else' Stmt               (rule 24)

	'('            shift, and enter state 36
	'-'            shift, and enter state 37
	'Bool'         shift, and enter state 7
	'False'        shift, and enter state 38
	'Function'     shift, and enter state 8
	'Int'          shift, and enter state 9
	'String'       shift, and enter state 10
	'True'         shift, and enter state 39
	'Void'         shift, and enter state 11
	'break'        shift, and enter state 92
	'continue'     shift, and enter state 93
	'def'          shift, and enter state 12
	'if'           shift, and enter state 94
	'ife'          shift, and enter state 95
	'not'          shift, and enter state 40
	'pass'         shift, and enter state 96
	'print'        shift, and enter state 97
	'return'       shift, and enter state 98
	'while'        shift, and enter state 99
	'{'            shift, and enter state 84
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 87
	Integer        goto state 27
	String         goto state 28
	Def            goto state 88
	Block          goto state 89
	Stmt           goto state 115
	Type           goto state 6
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 34
	Expr           goto state 91

State 107

	Stmt -> 'if' Expr . Stmt                            (rule 23)

	'('            shift, and enter state 36
	'-'            shift, and enter state 37
	'Bool'         shift, and enter state 7
	'False'        shift, and enter state 38
	'Function'     shift, and enter state 8
	'Int'          shift, and enter state 9
	'String'       shift, and enter state 10
	'True'         shift, and enter state 39
	'Void'         shift, and enter state 11
	'break'        shift, and enter state 92
	'continue'     shift, and enter state 93
	'def'          shift, and enter state 12
	'if'           shift, and enter state 94
	'ife'          shift, and enter state 95
	'not'          shift, and enter state 40
	'pass'         shift, and enter state 96
	'print'        shift, and enter state 97
	'return'       shift, and enter state 98
	'while'        shift, and enter state 99
	'{'            shift, and enter state 84
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 87
	Integer        goto state 27
	String         goto state 28
	Def            goto state 88
	Block          goto state 89
	Stmt           goto state 114
	Type           goto state 6
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 34
	Expr           goto state 91

State 108

	Stmt -> 'continue' ';' .                            (rule 28)

	'('            reduce using rule 28
	'-'            reduce using rule 28
	'Bool'         reduce using rule 28
	'False'        reduce using rule 28
	'Function'     reduce using rule 28
	'Int'          reduce using rule 28
	'String'       reduce using rule 28
	'True'         reduce using rule 28
	'Void'         reduce using rule 28
	'break'        reduce using rule 28
	'continue'     reduce using rule 28
	'def'          reduce using rule 28
	'else'         reduce using rule 28
	'if'           reduce using rule 28
	'ife'          reduce using rule 28
	'not'          reduce using rule 28
	'pass'         reduce using rule 28
	'print'        reduce using rule 28
	'return'       reduce using rule 28
	'while'        reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	L_ident        reduce using rule 28
	L_integ        reduce using rule 28
	L_quoted       reduce using rule 28


State 109

	Stmt -> 'break' ';' .                               (rule 27)

	'('            reduce using rule 27
	'-'            reduce using rule 27
	'Bool'         reduce using rule 27
	'False'        reduce using rule 27
	'Function'     reduce using rule 27
	'Int'          reduce using rule 27
	'String'       reduce using rule 27
	'True'         reduce using rule 27
	'Void'         reduce using rule 27
	'break'        reduce using rule 27
	'continue'     reduce using rule 27
	'def'          reduce using rule 27
	'else'         reduce using rule 27
	'if'           reduce using rule 27
	'ife'          reduce using rule 27
	'not'          reduce using rule 27
	'pass'         reduce using rule 27
	'print'        reduce using rule 27
	'return'       reduce using rule 27
	'while'        reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	L_ident        reduce using rule 27
	L_integ        reduce using rule 27
	L_quoted       reduce using rule 27


State 110

	Stmt -> Expr ';' .                                  (rule 26)

	'('            reduce using rule 26
	'-'            reduce using rule 26
	'Bool'         reduce using rule 26
	'False'        reduce using rule 26
	'Function'     reduce using rule 26
	'Int'          reduce using rule 26
	'String'       reduce using rule 26
	'True'         reduce using rule 26
	'Void'         reduce using rule 26
	'break'        reduce using rule 26
	'continue'     reduce using rule 26
	'def'          reduce using rule 26
	'else'         reduce using rule 26
	'if'           reduce using rule 26
	'ife'          reduce using rule 26
	'not'          reduce using rule 26
	'pass'         reduce using rule 26
	'print'        reduce using rule 26
	'return'       reduce using rule 26
	'while'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	L_ident        reduce using rule 26
	L_integ        reduce using rule 26
	L_quoted       reduce using rule 26


State 111

	Stmt -> Def ';' .                                   (rule 19)

	'('            reduce using rule 19
	'-'            reduce using rule 19
	'Bool'         reduce using rule 19
	'False'        reduce using rule 19
	'Function'     reduce using rule 19
	'Int'          reduce using rule 19
	'String'       reduce using rule 19
	'True'         reduce using rule 19
	'Void'         reduce using rule 19
	'break'        reduce using rule 19
	'continue'     reduce using rule 19
	'def'          reduce using rule 19
	'else'         reduce using rule 19
	'if'           reduce using rule 19
	'ife'          reduce using rule 19
	'not'          reduce using rule 19
	'pass'         reduce using rule 19
	'print'        reduce using rule 19
	'return'       reduce using rule 19
	'while'        reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	L_ident        reduce using rule 19
	L_integ        reduce using rule 19
	L_quoted       reduce using rule 19


State 112

	Stmt -> Ident '=' . Expr ';'                        (rule 20)

	'('            shift, and enter state 36
	'-'            shift, and enter state 37
	'False'        shift, and enter state 38
	'True'         shift, and enter state 39
	'not'          shift, and enter state 40
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 26
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 34
	Expr           goto state 113

State 113

	Stmt -> Ident '=' Expr . ';'                        (rule 20)

	';'            shift, and enter state 121


State 114

	Stmt -> 'if' Expr Stmt .                            (rule 23)

	'('            reduce using rule 23
	'-'            reduce using rule 23
	'Bool'         reduce using rule 23
	'False'        reduce using rule 23
	'Function'     reduce using rule 23
	'Int'          reduce using rule 23
	'String'       reduce using rule 23
	'True'         reduce using rule 23
	'Void'         reduce using rule 23
	'break'        reduce using rule 23
	'continue'     reduce using rule 23
	'def'          reduce using rule 23
	'else'         reduce using rule 23
	'if'           reduce using rule 23
	'ife'          reduce using rule 23
	'not'          reduce using rule 23
	'pass'         reduce using rule 23
	'print'        reduce using rule 23
	'return'       reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	L_ident        reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23


State 115

	Stmt -> 'ife' Expr Stmt . 'else' Stmt               (rule 24)

	'else'         shift, and enter state 120


State 116

	Stmt -> 'print' '(' Expr . ')' ';'                  (rule 29)

	')'            shift, and enter state 119


State 117

	Stmt -> 'return' Expr ';' .                         (rule 21)

	'('            reduce using rule 21
	'-'            reduce using rule 21
	'Bool'         reduce using rule 21
	'False'        reduce using rule 21
	'Function'     reduce using rule 21
	'Int'          reduce using rule 21
	'String'       reduce using rule 21
	'True'         reduce using rule 21
	'Void'         reduce using rule 21
	'break'        reduce using rule 21
	'continue'     reduce using rule 21
	'def'          reduce using rule 21
	'else'         reduce using rule 21
	'if'           reduce using rule 21
	'ife'          reduce using rule 21
	'not'          reduce using rule 21
	'pass'         reduce using rule 21
	'print'        reduce using rule 21
	'return'       reduce using rule 21
	'while'        reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	L_ident        reduce using rule 21
	L_integ        reduce using rule 21
	L_quoted       reduce using rule 21


State 118

	Stmt -> 'while' Expr Stmt .                         (rule 25)

	'('            reduce using rule 25
	'-'            reduce using rule 25
	'Bool'         reduce using rule 25
	'False'        reduce using rule 25
	'Function'     reduce using rule 25
	'Int'          reduce using rule 25
	'String'       reduce using rule 25
	'True'         reduce using rule 25
	'Void'         reduce using rule 25
	'break'        reduce using rule 25
	'continue'     reduce using rule 25
	'def'          reduce using rule 25
	'else'         reduce using rule 25
	'if'           reduce using rule 25
	'ife'          reduce using rule 25
	'not'          reduce using rule 25
	'pass'         reduce using rule 25
	'print'        reduce using rule 25
	'return'       reduce using rule 25
	'while'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	L_ident        reduce using rule 25
	L_integ        reduce using rule 25
	L_quoted       reduce using rule 25


State 119

	Stmt -> 'print' '(' Expr ')' . ';'                  (rule 29)

	';'            shift, and enter state 123


State 120

	Stmt -> 'ife' Expr Stmt 'else' . Stmt               (rule 24)

	'('            shift, and enter state 36
	'-'            shift, and enter state 37
	'Bool'         shift, and enter state 7
	'False'        shift, and enter state 38
	'Function'     shift, and enter state 8
	'Int'          shift, and enter state 9
	'String'       shift, and enter state 10
	'True'         shift, and enter state 39
	'Void'         shift, and enter state 11
	'break'        shift, and enter state 92
	'continue'     shift, and enter state 93
	'def'          shift, and enter state 12
	'if'           shift, and enter state 94
	'ife'          shift, and enter state 95
	'not'          shift, and enter state 40
	'pass'         shift, and enter state 96
	'print'        shift, and enter state 97
	'return'       shift, and enter state 98
	'while'        shift, and enter state 99
	'{'            shift, and enter state 84
	L_ident        shift, and enter state 2
	L_integ        shift, and enter state 41
	L_quoted       shift, and enter state 42

	Ident          goto state 87
	Integer        goto state 27
	String         goto state 28
	Def            goto state 88
	Block          goto state 89
	Stmt           goto state 122
	Type           goto state 6
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 34
	Expr           goto state 91

State 121

	Stmt -> Ident '=' Expr ';' .                        (rule 20)

	'('            reduce using rule 20
	'-'            reduce using rule 20
	'Bool'         reduce using rule 20
	'False'        reduce using rule 20
	'Function'     reduce using rule 20
	'Int'          reduce using rule 20
	'String'       reduce using rule 20
	'True'         reduce using rule 20
	'Void'         reduce using rule 20
	'break'        reduce using rule 20
	'continue'     reduce using rule 20
	'def'          reduce using rule 20
	'else'         reduce using rule 20
	'if'           reduce using rule 20
	'ife'          reduce using rule 20
	'not'          reduce using rule 20
	'pass'         reduce using rule 20
	'print'        reduce using rule 20
	'return'       reduce using rule 20
	'while'        reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	L_ident        reduce using rule 20
	L_integ        reduce using rule 20
	L_quoted       reduce using rule 20


State 122

	Stmt -> 'ife' Expr Stmt 'else' Stmt .               (rule 24)

	'('            reduce using rule 24
	'-'            reduce using rule 24
	'Bool'         reduce using rule 24
	'False'        reduce using rule 24
	'Function'     reduce using rule 24
	'Int'          reduce using rule 24
	'String'       reduce using rule 24
	'True'         reduce using rule 24
	'Void'         reduce using rule 24
	'break'        reduce using rule 24
	'continue'     reduce using rule 24
	'def'          reduce using rule 24
	'else'         reduce using rule 24
	'if'           reduce using rule 24
	'ife'          reduce using rule 24
	'not'          reduce using rule 24
	'pass'         reduce using rule 24
	'print'        reduce using rule 24
	'return'       reduce using rule 24
	'while'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	L_ident        reduce using rule 24
	L_integ        reduce using rule 24
	L_quoted       reduce using rule 24


State 123

	Stmt -> 'print' '(' Expr ')' ';' .                  (rule 29)

	'('            reduce using rule 29
	'-'            reduce using rule 29
	'Bool'         reduce using rule 29
	'False'        reduce using rule 29
	'Function'     reduce using rule 29
	'Int'          reduce using rule 29
	'String'       reduce using rule 29
	'True'         reduce using rule 29
	'Void'         reduce using rule 29
	'break'        reduce using rule 29
	'continue'     reduce using rule 29
	'def'          reduce using rule 29
	'else'         reduce using rule 29
	'if'           reduce using rule 29
	'ife'          reduce using rule 29
	'not'          reduce using rule 29
	'pass'         reduce using rule 29
	'print'        reduce using rule 29
	'return'       reduce using rule 29
	'while'        reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	L_ident        reduce using rule 29
	L_integ        reduce using rule 29
	L_quoted       reduce using rule 29


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 72
Number of terminals: 43
Number of non-terminals: 25
Number of states: 124
